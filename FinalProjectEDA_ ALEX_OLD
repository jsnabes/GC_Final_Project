{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6a78254b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sn\n",
    "import statsmodels.api as sm\n",
    "import numpy as np\n",
    "import datetime\n",
    "from sqlalchemy import create_engine\n",
    "import time\n",
    "from pyspark.sql import SparkSession\n",
    "import seaborn as sns\n",
    "import warnings\n",
    "warnings.simplefilter(action='ignore', category=FutureWarning)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7a84696e",
   "metadata": {},
   "source": [
    "### Initial questions/tasks:\n",
    "1. Are certain trains running late more than others?\n",
    "\n",
    "2. Are certain routes running late more than others?\n",
    "\n",
    "3. How often are planned arrivals matching the actual arrival time?\n",
    "\n",
    "4. Are trains leaving late from a platform/station?\n",
    "\n",
    "5. What train has the longest route?\n",
    "\n",
    "6. What train has the shortest route?\n",
    "\n",
    "7. Does the train length affect ability to be on time?\n",
    " \n",
    "8. Do some routes have more stations/platforms to stop at?\n",
    "\n",
    "9. What is the longest route based on time?\n",
    "\n",
    "10. What is the shortest route based on time?\n",
    "\n",
    "11. Merge the station rail name reference sheet with api data for readable station names\n",
    "\n",
    "12. Top 10 frequently visited stations in a day? Does it vary?\n",
    "\n",
    "13. Are certain stations busier at different times?\n",
    "\n",
    "14. What is the difference between planned and working times? How often do they differ?\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fc923734",
   "metadata": {},
   "source": [
    "### Reading in sample data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ada94c94",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>route_id</th>\n",
       "      <th>unique_id</th>\n",
       "      <th>service_start_date</th>\n",
       "      <th>update_origin</th>\n",
       "      <th>train_platform</th>\n",
       "      <th>working_time_pass</th>\n",
       "      <th>working_time_arrival</th>\n",
       "      <th>working_time_departure</th>\n",
       "      <th>planned_time_arrival</th>\n",
       "      <th>planned_time_departure</th>\n",
       "      <th>pass</th>\n",
       "      <th>platform</th>\n",
       "      <th>train_length</th>\n",
       "      <th>actual_arrival_time</th>\n",
       "      <th>actual_departure_time</th>\n",
       "      <th>is_delayed_arrival</th>\n",
       "      <th>is_delayed_departure</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>STFD</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 00:03:00</td>\n",
       "      <td>2023-07-27 00:03:30</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>None</td>\n",
       "      <td>5</td>\n",
       "      <td>None</td>\n",
       "      <td>2023-07-27 00:53:00</td>\n",
       "      <td>2023-07-27 00:53:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>SPNY205</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 00:07:00</td>\n",
       "      <td>2023-07-27 00:13:30</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>2023-07-27 00:57:00</td>\n",
       "      <td>2023-07-27 00:58:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>PADTLL</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 00:30:30</td>\n",
       "      <td>2023-07-27 00:31:00</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>None</td>\n",
       "      <td>B</td>\n",
       "      <td>None</td>\n",
       "      <td>2023-07-27 01:07:00</td>\n",
       "      <td>2023-07-27 01:07:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>WBRNPKS</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 00:33:00</td>\n",
       "      <td>2023-07-27 00:35:00</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>None</td>\n",
       "      <td>A</td>\n",
       "      <td>None</td>\n",
       "      <td>2023-07-27 01:09:00</td>\n",
       "      <td>2023-07-27 01:10:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>202307277674553</td>\n",
       "      <td>L74553</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>SVNOAKS</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 21:53:00</td>\n",
       "      <td>2023-07-27 21:54:30</td>\n",
       "      <td>2023-07-27 21:53:00</td>\n",
       "      <td>2023-07-27 21:54:00</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94233</th>\n",
       "      <td>202307278055183</td>\n",
       "      <td>P55183</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>BRADIN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 17:30:30</td>\n",
       "      <td>2023-07-27 17:33:30</td>\n",
       "      <td>2023-07-27 17:31:00</td>\n",
       "      <td>2023-07-27 17:33:00</td>\n",
       "      <td>None</td>\n",
       "      <td>4</td>\n",
       "      <td>None</td>\n",
       "      <td>2023-07-27 18:07:00</td>\n",
       "      <td>2023-07-27 18:08:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94235</th>\n",
       "      <td>202307278055183</td>\n",
       "      <td>P55183</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>HLFX</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 17:44:00</td>\n",
       "      <td>2023-07-27 17:45:00</td>\n",
       "      <td>2023-07-27 17:44:00</td>\n",
       "      <td>2023-07-27 17:45:00</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>2023-07-27 18:18:00</td>\n",
       "      <td>2023-07-27 18:19:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94238</th>\n",
       "      <td>202307278055183</td>\n",
       "      <td>P55183</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>HBDNBDG</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 17:58:30</td>\n",
       "      <td>2023-07-27 18:01:30</td>\n",
       "      <td>2023-07-27 17:59:00</td>\n",
       "      <td>2023-07-27 18:01:00</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>2023-07-27 18:29:00</td>\n",
       "      <td>2023-07-27 18:30:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94240</th>\n",
       "      <td>202307278055183</td>\n",
       "      <td>P55183</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>TODMRDN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 18:08:30</td>\n",
       "      <td>2023-07-27 18:09:30</td>\n",
       "      <td>2023-07-27 18:09:00</td>\n",
       "      <td>2023-07-27 18:09:00</td>\n",
       "      <td>None</td>\n",
       "      <td>1</td>\n",
       "      <td>None</td>\n",
       "      <td>2023-07-27 18:35:00</td>\n",
       "      <td>2023-07-27 18:35:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94243</th>\n",
       "      <td>202307278055183</td>\n",
       "      <td>P55183</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>RCHDALE</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 18:18:30</td>\n",
       "      <td>2023-07-27 18:19:30</td>\n",
       "      <td>2023-07-27 18:19:00</td>\n",
       "      <td>2023-07-27 18:19:00</td>\n",
       "      <td>None</td>\n",
       "      <td>3</td>\n",
       "      <td>None</td>\n",
       "      <td>2023-07-27 18:44:00</td>\n",
       "      <td>2023-07-27 18:45:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>37100 rows × 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              route_id unique_id service_start_date update_origin  \\\n",
       "8      202307277679020    L79020         2023-07-27        Darwin   \n",
       "10     202307277679020    L79020         2023-07-27        Darwin   \n",
       "16     202307277679020    L79020         2023-07-27        Darwin   \n",
       "17     202307277679020    L79020         2023-07-27        Darwin   \n",
       "22     202307277674553    L74553         2023-07-27            TD   \n",
       "...                ...       ...                ...           ...   \n",
       "94233  202307278055183    P55183         2023-07-27        Darwin   \n",
       "94235  202307278055183    P55183         2023-07-27        Darwin   \n",
       "94238  202307278055183    P55183         2023-07-27        Darwin   \n",
       "94240  202307278055183    P55183         2023-07-27        Darwin   \n",
       "94243  202307278055183    P55183         2023-07-27        Darwin   \n",
       "\n",
       "      train_platform working_time_pass working_time_arrival  \\\n",
       "8               STFD               NaT  2023-07-27 00:03:00   \n",
       "10           SPNY205               NaT  2023-07-27 00:07:00   \n",
       "16            PADTLL               NaT  2023-07-27 00:30:30   \n",
       "17           WBRNPKS               NaT  2023-07-27 00:33:00   \n",
       "22           SVNOAKS               NaT  2023-07-27 21:53:00   \n",
       "...              ...               ...                  ...   \n",
       "94233         BRADIN               NaT  2023-07-27 17:30:30   \n",
       "94235           HLFX               NaT  2023-07-27 17:44:00   \n",
       "94238        HBDNBDG               NaT  2023-07-27 17:58:30   \n",
       "94240        TODMRDN               NaT  2023-07-27 18:08:30   \n",
       "94243        RCHDALE               NaT  2023-07-27 18:18:30   \n",
       "\n",
       "      working_time_departure planned_time_arrival planned_time_departure  \\\n",
       "8        2023-07-27 00:03:30                  NaT                    NaT   \n",
       "10       2023-07-27 00:13:30                  NaT                    NaT   \n",
       "16       2023-07-27 00:31:00                  NaT                    NaT   \n",
       "17       2023-07-27 00:35:00                  NaT                    NaT   \n",
       "22       2023-07-27 21:54:30  2023-07-27 21:53:00    2023-07-27 21:54:00   \n",
       "...                      ...                  ...                    ...   \n",
       "94233    2023-07-27 17:33:30  2023-07-27 17:31:00    2023-07-27 17:33:00   \n",
       "94235    2023-07-27 17:45:00  2023-07-27 17:44:00    2023-07-27 17:45:00   \n",
       "94238    2023-07-27 18:01:30  2023-07-27 17:59:00    2023-07-27 18:01:00   \n",
       "94240    2023-07-27 18:09:30  2023-07-27 18:09:00    2023-07-27 18:09:00   \n",
       "94243    2023-07-27 18:19:30  2023-07-27 18:19:00    2023-07-27 18:19:00   \n",
       "\n",
       "       pass platform train_length actual_arrival_time actual_departure_time  \\\n",
       "8      None        5         None 2023-07-27 00:53:00   2023-07-27 00:53:00   \n",
       "10     None     None         None 2023-07-27 00:57:00   2023-07-27 00:58:00   \n",
       "16     None        B         None 2023-07-27 01:07:00   2023-07-27 01:07:00   \n",
       "17     None        A         None 2023-07-27 01:09:00   2023-07-27 01:10:00   \n",
       "22     None        1            8                 NaT                   NaT   \n",
       "...     ...      ...          ...                 ...                   ...   \n",
       "94233  None        4         None 2023-07-27 18:07:00   2023-07-27 18:08:00   \n",
       "94235  None        1         None 2023-07-27 18:18:00   2023-07-27 18:19:00   \n",
       "94238  None        1         None 2023-07-27 18:29:00   2023-07-27 18:30:00   \n",
       "94240  None        1         None 2023-07-27 18:35:00   2023-07-27 18:35:00   \n",
       "94243  None        3         None 2023-07-27 18:44:00   2023-07-27 18:45:00   \n",
       "\n",
       "       is_delayed_arrival  is_delayed_departure  \n",
       "8                    True                  True  \n",
       "10                   True                  True  \n",
       "16                   True                  True  \n",
       "17                   True                  True  \n",
       "22                  False                 False  \n",
       "...                   ...                   ...  \n",
       "94233                True                  True  \n",
       "94235                True                  True  \n",
       "94238                True                  True  \n",
       "94240                True                  True  \n",
       "94243                True                  True  \n",
       "\n",
       "[37100 rows x 17 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_parquet('/Users/raken/Downloads/rail_data_cleaned_20230728132300.parquet')\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1395dcbf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Index: 37100 entries, 8 to 94243\n",
      "Data columns (total 17 columns):\n",
      " #   Column                  Non-Null Count  Dtype         \n",
      "---  ------                  --------------  -----         \n",
      " 0   route_id                37100 non-null  object        \n",
      " 1   unique_id               37100 non-null  object        \n",
      " 2   service_start_date      37100 non-null  object        \n",
      " 3   update_origin           36515 non-null  object        \n",
      " 4   train_platform          37100 non-null  object        \n",
      " 5   working_time_pass       0 non-null      datetime64[ns]\n",
      " 6   working_time_arrival    37100 non-null  datetime64[ns]\n",
      " 7   working_time_departure  37100 non-null  datetime64[ns]\n",
      " 8   planned_time_arrival    33855 non-null  datetime64[ns]\n",
      " 9   planned_time_departure  33580 non-null  datetime64[ns]\n",
      " 10  pass                    0 non-null      object        \n",
      " 11  platform                34114 non-null  object        \n",
      " 12  train_length            10595 non-null  object        \n",
      " 13  actual_arrival_time     31769 non-null  datetime64[ns]\n",
      " 14  actual_departure_time   34384 non-null  datetime64[ns]\n",
      " 15  is_delayed_arrival      37100 non-null  bool          \n",
      " 16  is_delayed_departure    37100 non-null  bool          \n",
      "dtypes: bool(2), datetime64[ns](7), object(8)\n",
      "memory usage: 4.6+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "13bb67a8",
   "metadata": {},
   "source": [
    "### Merging the station rail name Reference Table with the data in order to provide more readable station names."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d0d2202b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 2628 entries, 0 to 2627\n",
      "Data columns (total 12 columns):\n",
      " #   Column                Non-Null Count  Dtype  \n",
      "---  ------                --------------  -----  \n",
      " 0   AtcoCode              2628 non-null   object \n",
      " 1   TiplocCode            2628 non-null   object \n",
      " 2   CrsCode               2628 non-null   object \n",
      " 3   StationName           2628 non-null   object \n",
      " 4   StationNameLang       0 non-null      float64\n",
      " 5   GridType              2627 non-null   object \n",
      " 6   Easting               2628 non-null   int64  \n",
      " 7   Northing              2628 non-null   int64  \n",
      " 8   CreationDateTime      2628 non-null   object \n",
      " 9   ModificationDateTime  2628 non-null   object \n",
      " 10  RevisionNumber        2628 non-null   int64  \n",
      " 11  Modification          2628 non-null   object \n",
      "dtypes: float64(1), int64(3), object(8)\n",
      "memory usage: 246.5+ KB\n"
     ]
    }
   ],
   "source": [
    "rail_ref = pd.read_csv('RailReferences.csv')\n",
    "rail_ref.head()\n",
    "rail_ref.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "55bf81bd",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.merge(left=df, right=rail_ref, \n",
    "                        left_on='train_platform', \n",
    "                        right_on=['TiplocCode'],\n",
    "                        how='left')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e5c7f2af",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 37100 entries, 0 to 37099\n",
      "Data columns (total 29 columns):\n",
      " #   Column                  Non-Null Count  Dtype         \n",
      "---  ------                  --------------  -----         \n",
      " 0   route_id                37100 non-null  object        \n",
      " 1   unique_id               37100 non-null  object        \n",
      " 2   service_start_date      37100 non-null  object        \n",
      " 3   update_origin           36515 non-null  object        \n",
      " 4   train_platform          37100 non-null  object        \n",
      " 5   working_time_pass       0 non-null      datetime64[ns]\n",
      " 6   working_time_arrival    37100 non-null  datetime64[ns]\n",
      " 7   working_time_departure  37100 non-null  datetime64[ns]\n",
      " 8   planned_time_arrival    33855 non-null  datetime64[ns]\n",
      " 9   planned_time_departure  33580 non-null  datetime64[ns]\n",
      " 10  pass                    0 non-null      object        \n",
      " 11  platform                34114 non-null  object        \n",
      " 12  train_length            10595 non-null  object        \n",
      " 13  actual_arrival_time     31769 non-null  datetime64[ns]\n",
      " 14  actual_departure_time   34384 non-null  datetime64[ns]\n",
      " 15  is_delayed_arrival      37100 non-null  bool          \n",
      " 16  is_delayed_departure    37100 non-null  bool          \n",
      " 17  AtcoCode                34478 non-null  object        \n",
      " 18  TiplocCode              34478 non-null  object        \n",
      " 19  CrsCode                 34478 non-null  object        \n",
      " 20  StationName             34478 non-null  object        \n",
      " 21  StationNameLang         0 non-null      float64       \n",
      " 22  GridType                34455 non-null  object        \n",
      " 23  Easting                 34478 non-null  float64       \n",
      " 24  Northing                34478 non-null  float64       \n",
      " 25  CreationDateTime        34478 non-null  object        \n",
      " 26  ModificationDateTime    34478 non-null  object        \n",
      " 27  RevisionNumber          34478 non-null  float64       \n",
      " 28  Modification            34478 non-null  object        \n",
      "dtypes: bool(2), datetime64[ns](7), float64(4), object(16)\n",
      "memory usage: 7.7+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8315e0c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>route_id</th>\n",
       "      <th>unique_id</th>\n",
       "      <th>service_start_date</th>\n",
       "      <th>update_origin</th>\n",
       "      <th>train_platform</th>\n",
       "      <th>working_time_pass</th>\n",
       "      <th>working_time_arrival</th>\n",
       "      <th>working_time_departure</th>\n",
       "      <th>planned_time_arrival</th>\n",
       "      <th>planned_time_departure</th>\n",
       "      <th>...</th>\n",
       "      <th>CrsCode</th>\n",
       "      <th>StationName</th>\n",
       "      <th>StationNameLang</th>\n",
       "      <th>GridType</th>\n",
       "      <th>Easting</th>\n",
       "      <th>Northing</th>\n",
       "      <th>CreationDateTime</th>\n",
       "      <th>ModificationDateTime</th>\n",
       "      <th>RevisionNumber</th>\n",
       "      <th>Modification</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>STFD</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 00:03:00</td>\n",
       "      <td>2023-07-27 00:03:30</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>...</td>\n",
       "      <td>SRA</td>\n",
       "      <td>Stratford (London) Rail Station</td>\n",
       "      <td>NaN</td>\n",
       "      <td>U</td>\n",
       "      <td>538557.0</td>\n",
       "      <td>184444.0</td>\n",
       "      <td>2003-11-04T00:00:00</td>\n",
       "      <td>2009-10-05T17:34:50</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rev</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>SPNY205</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 00:07:00</td>\n",
       "      <td>2023-07-27 00:13:30</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>PADTLL</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 00:30:30</td>\n",
       "      <td>2023-07-27 00:31:00</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>WBRNPKS</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 00:33:00</td>\n",
       "      <td>2023-07-27 00:35:00</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>202307277674553</td>\n",
       "      <td>L74553</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>SVNOAKS</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 21:53:00</td>\n",
       "      <td>2023-07-27 21:54:30</td>\n",
       "      <td>2023-07-27 21:53:00</td>\n",
       "      <td>2023-07-27 21:54:00</td>\n",
       "      <td>...</td>\n",
       "      <td>SEV</td>\n",
       "      <td>Sevenoaks Rail Station</td>\n",
       "      <td>NaN</td>\n",
       "      <td>U</td>\n",
       "      <td>552267.0</td>\n",
       "      <td>155340.0</td>\n",
       "      <td>2003-11-04T00:00:00</td>\n",
       "      <td>2006-09-18T18:24:34</td>\n",
       "      <td>1.0</td>\n",
       "      <td>rev</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>202307277679633</td>\n",
       "      <td>L79633</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>STFD</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 19:42:30</td>\n",
       "      <td>2023-07-27 19:43:30</td>\n",
       "      <td>2023-07-27 19:43:00</td>\n",
       "      <td>2023-07-27 19:43:00</td>\n",
       "      <td>...</td>\n",
       "      <td>SRA</td>\n",
       "      <td>Stratford (London) Rail Station</td>\n",
       "      <td>NaN</td>\n",
       "      <td>U</td>\n",
       "      <td>538557.0</td>\n",
       "      <td>184444.0</td>\n",
       "      <td>2003-11-04T00:00:00</td>\n",
       "      <td>2009-10-05T17:34:50</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rev</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>202307277679633</td>\n",
       "      <td>L79633</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>MRYLAND</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 19:45:00</td>\n",
       "      <td>2023-07-27 19:45:30</td>\n",
       "      <td>2023-07-27 19:45:00</td>\n",
       "      <td>2023-07-27 19:45:00</td>\n",
       "      <td>...</td>\n",
       "      <td>MYL</td>\n",
       "      <td>Maryland Rail Station</td>\n",
       "      <td>NaN</td>\n",
       "      <td>U</td>\n",
       "      <td>539183.0</td>\n",
       "      <td>184927.0</td>\n",
       "      <td>2003-11-04T00:00:00</td>\n",
       "      <td>2009-03-30T16:45:31</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rev</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>202307277679633</td>\n",
       "      <td>L79633</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>FRSTGT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 19:47:00</td>\n",
       "      <td>2023-07-27 19:47:30</td>\n",
       "      <td>2023-07-27 19:47:00</td>\n",
       "      <td>2023-07-27 19:47:00</td>\n",
       "      <td>...</td>\n",
       "      <td>FOG</td>\n",
       "      <td>Forest Gate Rail Station</td>\n",
       "      <td>NaN</td>\n",
       "      <td>U</td>\n",
       "      <td>540458.0</td>\n",
       "      <td>185335.0</td>\n",
       "      <td>2003-11-04T00:00:00</td>\n",
       "      <td>2006-12-04T09:04:20</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rev</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>202307277679633</td>\n",
       "      <td>L79633</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>MANRPK</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 19:49:30</td>\n",
       "      <td>2023-07-27 19:50:00</td>\n",
       "      <td>2023-07-27 19:50:00</td>\n",
       "      <td>2023-07-27 19:50:00</td>\n",
       "      <td>...</td>\n",
       "      <td>MNP</td>\n",
       "      <td>Manor Park Rail Station</td>\n",
       "      <td>NaN</td>\n",
       "      <td>U</td>\n",
       "      <td>541973.0</td>\n",
       "      <td>185716.0</td>\n",
       "      <td>2003-11-04T00:00:00</td>\n",
       "      <td>2010-05-14T17:37:23</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rev</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>202307277679633</td>\n",
       "      <td>L79633</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>ILFORD</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 19:52:00</td>\n",
       "      <td>2023-07-27 19:53:00</td>\n",
       "      <td>2023-07-27 19:52:00</td>\n",
       "      <td>2023-07-27 19:53:00</td>\n",
       "      <td>...</td>\n",
       "      <td>IFD</td>\n",
       "      <td>Ilford Rail Station</td>\n",
       "      <td>NaN</td>\n",
       "      <td>U</td>\n",
       "      <td>543570.0</td>\n",
       "      <td>186500.0</td>\n",
       "      <td>2003-11-04T00:00:00</td>\n",
       "      <td>2010-05-14T17:37:23</td>\n",
       "      <td>2.0</td>\n",
       "      <td>rev</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 29 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          route_id unique_id service_start_date update_origin train_platform  \\\n",
       "0  202307277679020    L79020         2023-07-27        Darwin           STFD   \n",
       "1  202307277679020    L79020         2023-07-27        Darwin        SPNY205   \n",
       "2  202307277679020    L79020         2023-07-27        Darwin         PADTLL   \n",
       "3  202307277679020    L79020         2023-07-27        Darwin        WBRNPKS   \n",
       "4  202307277674553    L74553         2023-07-27            TD        SVNOAKS   \n",
       "5  202307277679633    L79633         2023-07-27            TD           STFD   \n",
       "6  202307277679633    L79633         2023-07-27            TD        MRYLAND   \n",
       "7  202307277679633    L79633         2023-07-27            TD         FRSTGT   \n",
       "8  202307277679633    L79633         2023-07-27            TD         MANRPK   \n",
       "9  202307277679633    L79633         2023-07-27            TD         ILFORD   \n",
       "\n",
       "  working_time_pass working_time_arrival working_time_departure  \\\n",
       "0               NaT  2023-07-27 00:03:00    2023-07-27 00:03:30   \n",
       "1               NaT  2023-07-27 00:07:00    2023-07-27 00:13:30   \n",
       "2               NaT  2023-07-27 00:30:30    2023-07-27 00:31:00   \n",
       "3               NaT  2023-07-27 00:33:00    2023-07-27 00:35:00   \n",
       "4               NaT  2023-07-27 21:53:00    2023-07-27 21:54:30   \n",
       "5               NaT  2023-07-27 19:42:30    2023-07-27 19:43:30   \n",
       "6               NaT  2023-07-27 19:45:00    2023-07-27 19:45:30   \n",
       "7               NaT  2023-07-27 19:47:00    2023-07-27 19:47:30   \n",
       "8               NaT  2023-07-27 19:49:30    2023-07-27 19:50:00   \n",
       "9               NaT  2023-07-27 19:52:00    2023-07-27 19:53:00   \n",
       "\n",
       "  planned_time_arrival planned_time_departure  ... CrsCode  \\\n",
       "0                  NaT                    NaT  ...     SRA   \n",
       "1                  NaT                    NaT  ...     NaN   \n",
       "2                  NaT                    NaT  ...     NaN   \n",
       "3                  NaT                    NaT  ...     NaN   \n",
       "4  2023-07-27 21:53:00    2023-07-27 21:54:00  ...     SEV   \n",
       "5  2023-07-27 19:43:00    2023-07-27 19:43:00  ...     SRA   \n",
       "6  2023-07-27 19:45:00    2023-07-27 19:45:00  ...     MYL   \n",
       "7  2023-07-27 19:47:00    2023-07-27 19:47:00  ...     FOG   \n",
       "8  2023-07-27 19:50:00    2023-07-27 19:50:00  ...     MNP   \n",
       "9  2023-07-27 19:52:00    2023-07-27 19:53:00  ...     IFD   \n",
       "\n",
       "                       StationName StationNameLang GridType   Easting  \\\n",
       "0  Stratford (London) Rail Station             NaN        U  538557.0   \n",
       "1                              NaN             NaN      NaN       NaN   \n",
       "2                              NaN             NaN      NaN       NaN   \n",
       "3                              NaN             NaN      NaN       NaN   \n",
       "4           Sevenoaks Rail Station             NaN        U  552267.0   \n",
       "5  Stratford (London) Rail Station             NaN        U  538557.0   \n",
       "6            Maryland Rail Station             NaN        U  539183.0   \n",
       "7         Forest Gate Rail Station             NaN        U  540458.0   \n",
       "8          Manor Park Rail Station             NaN        U  541973.0   \n",
       "9              Ilford Rail Station             NaN        U  543570.0   \n",
       "\n",
       "   Northing     CreationDateTime ModificationDateTime RevisionNumber  \\\n",
       "0  184444.0  2003-11-04T00:00:00  2009-10-05T17:34:50            2.0   \n",
       "1       NaN                  NaN                  NaN            NaN   \n",
       "2       NaN                  NaN                  NaN            NaN   \n",
       "3       NaN                  NaN                  NaN            NaN   \n",
       "4  155340.0  2003-11-04T00:00:00  2006-09-18T18:24:34            1.0   \n",
       "5  184444.0  2003-11-04T00:00:00  2009-10-05T17:34:50            2.0   \n",
       "6  184927.0  2003-11-04T00:00:00  2009-03-30T16:45:31            2.0   \n",
       "7  185335.0  2003-11-04T00:00:00  2006-12-04T09:04:20            2.0   \n",
       "8  185716.0  2003-11-04T00:00:00  2010-05-14T17:37:23            2.0   \n",
       "9  186500.0  2003-11-04T00:00:00  2010-05-14T17:37:23            2.0   \n",
       "\n",
       "  Modification  \n",
       "0          rev  \n",
       "1          NaN  \n",
       "2          NaN  \n",
       "3          NaN  \n",
       "4          rev  \n",
       "5          rev  \n",
       "6          rev  \n",
       "7          rev  \n",
       "8          rev  \n",
       "9          rev  \n",
       "\n",
       "[10 rows x 29 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a8efa817",
   "metadata": {},
   "source": [
    "#### Dropping some columns with not enough or relevant data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "5dc073d7",
   "metadata": {},
   "outputs": [],
   "source": [
    "df= df.drop(['working_time_pass','pass','train_length','Easting','Northing','GridType','StationNameLang',\n",
    "        'CreationDateTime','ModificationDateTime','RevisionNumber','Modification',\n",
    "        'AtcoCode','CrsCode'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "f6b23830",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 37100 entries, 0 to 37099\n",
      "Data columns (total 16 columns):\n",
      " #   Column                  Non-Null Count  Dtype         \n",
      "---  ------                  --------------  -----         \n",
      " 0   route_id                37100 non-null  object        \n",
      " 1   unique_id               37100 non-null  object        \n",
      " 2   service_start_date      37100 non-null  object        \n",
      " 3   update_origin           36515 non-null  object        \n",
      " 4   train_platform          37100 non-null  object        \n",
      " 5   working_time_arrival    37100 non-null  datetime64[ns]\n",
      " 6   working_time_departure  37100 non-null  datetime64[ns]\n",
      " 7   planned_time_arrival    33855 non-null  datetime64[ns]\n",
      " 8   planned_time_departure  33580 non-null  datetime64[ns]\n",
      " 9   platform                34114 non-null  object        \n",
      " 10  actual_arrival_time     31769 non-null  datetime64[ns]\n",
      " 11  actual_departure_time   34384 non-null  datetime64[ns]\n",
      " 12  is_delayed_arrival      37100 non-null  bool          \n",
      " 13  is_delayed_departure    37100 non-null  bool          \n",
      " 14  TiplocCode              34478 non-null  object        \n",
      " 15  StationName             34478 non-null  object        \n",
      "dtypes: bool(2), datetime64[ns](6), object(8)\n",
      "memory usage: 4.0+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c662e15d",
   "metadata": {},
   "source": [
    "#### Renaming columns for clarity and consistency"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "672d3c3e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>route_id</th>\n",
       "      <th>unique_id</th>\n",
       "      <th>service_start_date</th>\n",
       "      <th>update_origin</th>\n",
       "      <th>station_name_code</th>\n",
       "      <th>working_time_arrival</th>\n",
       "      <th>working_time_departure</th>\n",
       "      <th>planned_time_arrival</th>\n",
       "      <th>planned_time_departure</th>\n",
       "      <th>platform</th>\n",
       "      <th>actual_arrival_time</th>\n",
       "      <th>actual_departure_time</th>\n",
       "      <th>is_delayed_arrival</th>\n",
       "      <th>is_delayed_departure</th>\n",
       "      <th>tiploc_code</th>\n",
       "      <th>station_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>STFD</td>\n",
       "      <td>2023-07-27 00:03:00</td>\n",
       "      <td>2023-07-27 00:03:30</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>5</td>\n",
       "      <td>2023-07-27 00:53:00</td>\n",
       "      <td>2023-07-27 00:53:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>STFD</td>\n",
       "      <td>Stratford (London) Rail Station</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>SPNY205</td>\n",
       "      <td>2023-07-27 00:07:00</td>\n",
       "      <td>2023-07-27 00:13:30</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>None</td>\n",
       "      <td>2023-07-27 00:57:00</td>\n",
       "      <td>2023-07-27 00:58:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>PADTLL</td>\n",
       "      <td>2023-07-27 00:30:30</td>\n",
       "      <td>2023-07-27 00:31:00</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>B</td>\n",
       "      <td>2023-07-27 01:07:00</td>\n",
       "      <td>2023-07-27 01:07:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>WBRNPKS</td>\n",
       "      <td>2023-07-27 00:33:00</td>\n",
       "      <td>2023-07-27 00:35:00</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>A</td>\n",
       "      <td>2023-07-27 01:09:00</td>\n",
       "      <td>2023-07-27 01:10:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>202307277674553</td>\n",
       "      <td>L74553</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>SVNOAKS</td>\n",
       "      <td>2023-07-27 21:53:00</td>\n",
       "      <td>2023-07-27 21:54:30</td>\n",
       "      <td>2023-07-27 21:53:00</td>\n",
       "      <td>2023-07-27 21:54:00</td>\n",
       "      <td>1</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>SVNOAKS</td>\n",
       "      <td>Sevenoaks Rail Station</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          route_id unique_id service_start_date update_origin  \\\n",
       "0  202307277679020    L79020         2023-07-27        Darwin   \n",
       "1  202307277679020    L79020         2023-07-27        Darwin   \n",
       "2  202307277679020    L79020         2023-07-27        Darwin   \n",
       "3  202307277679020    L79020         2023-07-27        Darwin   \n",
       "4  202307277674553    L74553         2023-07-27            TD   \n",
       "\n",
       "  station_name_code working_time_arrival working_time_departure  \\\n",
       "0              STFD  2023-07-27 00:03:00    2023-07-27 00:03:30   \n",
       "1           SPNY205  2023-07-27 00:07:00    2023-07-27 00:13:30   \n",
       "2            PADTLL  2023-07-27 00:30:30    2023-07-27 00:31:00   \n",
       "3           WBRNPKS  2023-07-27 00:33:00    2023-07-27 00:35:00   \n",
       "4           SVNOAKS  2023-07-27 21:53:00    2023-07-27 21:54:30   \n",
       "\n",
       "  planned_time_arrival planned_time_departure platform actual_arrival_time  \\\n",
       "0                  NaT                    NaT        5 2023-07-27 00:53:00   \n",
       "1                  NaT                    NaT     None 2023-07-27 00:57:00   \n",
       "2                  NaT                    NaT        B 2023-07-27 01:07:00   \n",
       "3                  NaT                    NaT        A 2023-07-27 01:09:00   \n",
       "4  2023-07-27 21:53:00    2023-07-27 21:54:00        1                 NaT   \n",
       "\n",
       "  actual_departure_time  is_delayed_arrival  is_delayed_departure tiploc_code  \\\n",
       "0   2023-07-27 00:53:00                True                  True        STFD   \n",
       "1   2023-07-27 00:58:00                True                  True         NaN   \n",
       "2   2023-07-27 01:07:00                True                  True         NaN   \n",
       "3   2023-07-27 01:10:00                True                  True         NaN   \n",
       "4                   NaT               False                 False     SVNOAKS   \n",
       "\n",
       "                      station_name  \n",
       "0  Stratford (London) Rail Station  \n",
       "1                              NaN  \n",
       "2                              NaN  \n",
       "3                              NaN  \n",
       "4           Sevenoaks Rail Station  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = df.rename(columns={'train_platform': 'station_name_code','TiplocCode': 'tiploc_code',\n",
    "                       'StationName':'station_name'})\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "9665fb61",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "route_id                     0\n",
       "unique_id                    0\n",
       "service_start_date           0\n",
       "update_origin              585\n",
       "station_name_code            0\n",
       "working_time_arrival         0\n",
       "working_time_departure       0\n",
       "planned_time_arrival      3245\n",
       "planned_time_departure    3520\n",
       "platform                  2986\n",
       "actual_arrival_time       5331\n",
       "actual_departure_time     2716\n",
       "is_delayed_arrival           0\n",
       "is_delayed_departure         0\n",
       "tiploc_code               2622\n",
       "station_name              2622\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7b97e9f5",
   "metadata": {},
   "source": [
    "### Creating new columns to help with analysis:\n",
    "    -'arrival_delay_amount': time difference between planned arrival time and actual arrival time\n",
    "    -'delay_amount_numeric': numeric difference (in nanoseconds) between planned arrival time and actual arrival time"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "2c6ab6c0",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['arrival_delay_amount'] =  df['actual_arrival_time'] - df['planned_time_arrival']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "3b7dcd68",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['delay_amount_numeric'] = df['arrival_delay_amount'].dt.total_seconds()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "fbda663b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 37100 entries, 0 to 37099\n",
      "Data columns (total 18 columns):\n",
      " #   Column                  Non-Null Count  Dtype          \n",
      "---  ------                  --------------  -----          \n",
      " 0   route_id                37100 non-null  object         \n",
      " 1   unique_id               37100 non-null  object         \n",
      " 2   service_start_date      37100 non-null  object         \n",
      " 3   update_origin           36515 non-null  object         \n",
      " 4   station_name_code       37100 non-null  object         \n",
      " 5   working_time_arrival    37100 non-null  datetime64[ns] \n",
      " 6   working_time_departure  37100 non-null  datetime64[ns] \n",
      " 7   planned_time_arrival    33855 non-null  datetime64[ns] \n",
      " 8   planned_time_departure  33580 non-null  datetime64[ns] \n",
      " 9   platform                34114 non-null  object         \n",
      " 10  actual_arrival_time     31769 non-null  datetime64[ns] \n",
      " 11  actual_departure_time   34384 non-null  datetime64[ns] \n",
      " 12  is_delayed_arrival      37100 non-null  bool           \n",
      " 13  is_delayed_departure    37100 non-null  bool           \n",
      " 14  tiploc_code             34478 non-null  object         \n",
      " 15  station_name            34478 non-null  object         \n",
      " 16  arrival_delay_amount    28885 non-null  timedelta64[ns]\n",
      " 17  delay_amount_numeric    28885 non-null  float64        \n",
      "dtypes: bool(2), datetime64[ns](6), float64(1), object(8), timedelta64[ns](1)\n",
      "memory usage: 4.6+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "ea541093",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0           NaN\n",
       "1           NaN\n",
       "2           NaN\n",
       "3           NaN\n",
       "4           NaN\n",
       "          ...  \n",
       "37095    2160.0\n",
       "37096    2040.0\n",
       "37097    1800.0\n",
       "37098    1560.0\n",
       "37099    1500.0\n",
       "Name: delay_amount_numeric, Length: 37100, dtype: float64"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['delay_amount_numeric']"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6eb23f6f",
   "metadata": {},
   "source": [
    "#### Currently a work in progress. We aim to calculate the trip length of various routes, the below solution did not work as intended.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "61e61892",
   "metadata": {},
   "outputs": [],
   "source": [
    "##df['trip_length'] =  df['actual_arrival_time'] - df['actual_departure_time']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "7fa4ac75",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['planned_vs_working'] = (df['planned_time_arrival'] - df['working_time_arrival']).astype(\n",
    "'int64')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b0b94b27",
   "metadata": {},
   "source": [
    "### Grouping data by 'route_id' to try and determine variance between routes related to delays"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "edf5da56",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>route_id</th>\n",
       "      <th>unique_id</th>\n",
       "      <th>service_start_date</th>\n",
       "      <th>update_origin</th>\n",
       "      <th>station_name_code</th>\n",
       "      <th>working_time_arrival</th>\n",
       "      <th>working_time_departure</th>\n",
       "      <th>planned_time_arrival</th>\n",
       "      <th>planned_time_departure</th>\n",
       "      <th>platform</th>\n",
       "      <th>actual_arrival_time</th>\n",
       "      <th>actual_departure_time</th>\n",
       "      <th>is_delayed_arrival</th>\n",
       "      <th>is_delayed_departure</th>\n",
       "      <th>tiploc_code</th>\n",
       "      <th>station_name</th>\n",
       "      <th>arrival_delay_amount</th>\n",
       "      <th>delay_amount_numeric</th>\n",
       "      <th>planned_vs_working</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>STFD</td>\n",
       "      <td>2023-07-27 00:03:00</td>\n",
       "      <td>2023-07-27 00:03:30</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>5</td>\n",
       "      <td>2023-07-27 00:53:00</td>\n",
       "      <td>2023-07-27 00:53:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>STFD</td>\n",
       "      <td>Stratford (London) Rail Station</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-9223372036854775808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>SPNY205</td>\n",
       "      <td>2023-07-27 00:07:00</td>\n",
       "      <td>2023-07-27 00:13:30</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>None</td>\n",
       "      <td>2023-07-27 00:57:00</td>\n",
       "      <td>2023-07-27 00:58:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-9223372036854775808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>PADTLL</td>\n",
       "      <td>2023-07-27 00:30:30</td>\n",
       "      <td>2023-07-27 00:31:00</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>B</td>\n",
       "      <td>2023-07-27 01:07:00</td>\n",
       "      <td>2023-07-27 01:07:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-9223372036854775808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>WBRNPKS</td>\n",
       "      <td>2023-07-27 00:33:00</td>\n",
       "      <td>2023-07-27 00:35:00</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>A</td>\n",
       "      <td>2023-07-27 01:09:00</td>\n",
       "      <td>2023-07-27 01:10:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-9223372036854775808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>202307277674553</td>\n",
       "      <td>L74553</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>SVNOAKS</td>\n",
       "      <td>2023-07-27 21:53:00</td>\n",
       "      <td>2023-07-27 21:54:30</td>\n",
       "      <td>2023-07-27 21:53:00</td>\n",
       "      <td>2023-07-27 21:54:00</td>\n",
       "      <td>1</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>SVNOAKS</td>\n",
       "      <td>Sevenoaks Rail Station</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37095</th>\n",
       "      <td>202307278055183</td>\n",
       "      <td>P55183</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>BRADIN</td>\n",
       "      <td>2023-07-27 17:30:30</td>\n",
       "      <td>2023-07-27 17:33:30</td>\n",
       "      <td>2023-07-27 17:31:00</td>\n",
       "      <td>2023-07-27 17:33:00</td>\n",
       "      <td>4</td>\n",
       "      <td>2023-07-27 18:07:00</td>\n",
       "      <td>2023-07-27 18:08:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>BRADIN</td>\n",
       "      <td>Bradford Interchange Rail Station</td>\n",
       "      <td>0 days 00:36:00</td>\n",
       "      <td>2160.0</td>\n",
       "      <td>30000000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37096</th>\n",
       "      <td>202307278055183</td>\n",
       "      <td>P55183</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>HLFX</td>\n",
       "      <td>2023-07-27 17:44:00</td>\n",
       "      <td>2023-07-27 17:45:00</td>\n",
       "      <td>2023-07-27 17:44:00</td>\n",
       "      <td>2023-07-27 17:45:00</td>\n",
       "      <td>1</td>\n",
       "      <td>2023-07-27 18:18:00</td>\n",
       "      <td>2023-07-27 18:19:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>HLFX</td>\n",
       "      <td>Halifax Rail Station</td>\n",
       "      <td>0 days 00:34:00</td>\n",
       "      <td>2040.0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37097</th>\n",
       "      <td>202307278055183</td>\n",
       "      <td>P55183</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>HBDNBDG</td>\n",
       "      <td>2023-07-27 17:58:30</td>\n",
       "      <td>2023-07-27 18:01:30</td>\n",
       "      <td>2023-07-27 17:59:00</td>\n",
       "      <td>2023-07-27 18:01:00</td>\n",
       "      <td>1</td>\n",
       "      <td>2023-07-27 18:29:00</td>\n",
       "      <td>2023-07-27 18:30:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>HBDNBDG</td>\n",
       "      <td>Hebden Bridge Rail Station</td>\n",
       "      <td>0 days 00:30:00</td>\n",
       "      <td>1800.0</td>\n",
       "      <td>30000000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37098</th>\n",
       "      <td>202307278055183</td>\n",
       "      <td>P55183</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>TODMRDN</td>\n",
       "      <td>2023-07-27 18:08:30</td>\n",
       "      <td>2023-07-27 18:09:30</td>\n",
       "      <td>2023-07-27 18:09:00</td>\n",
       "      <td>2023-07-27 18:09:00</td>\n",
       "      <td>1</td>\n",
       "      <td>2023-07-27 18:35:00</td>\n",
       "      <td>2023-07-27 18:35:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>TODMRDN</td>\n",
       "      <td>Todmorden Rail Station</td>\n",
       "      <td>0 days 00:26:00</td>\n",
       "      <td>1560.0</td>\n",
       "      <td>30000000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37099</th>\n",
       "      <td>202307278055183</td>\n",
       "      <td>P55183</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>RCHDALE</td>\n",
       "      <td>2023-07-27 18:18:30</td>\n",
       "      <td>2023-07-27 18:19:30</td>\n",
       "      <td>2023-07-27 18:19:00</td>\n",
       "      <td>2023-07-27 18:19:00</td>\n",
       "      <td>3</td>\n",
       "      <td>2023-07-27 18:44:00</td>\n",
       "      <td>2023-07-27 18:45:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>RCHDALE</td>\n",
       "      <td>Rochdale Rail Station</td>\n",
       "      <td>0 days 00:25:00</td>\n",
       "      <td>1500.0</td>\n",
       "      <td>30000000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>35673 rows × 19 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              route_id unique_id service_start_date update_origin  \\\n",
       "0      202307277679020    L79020         2023-07-27        Darwin   \n",
       "1      202307277679020    L79020         2023-07-27        Darwin   \n",
       "2      202307277679020    L79020         2023-07-27        Darwin   \n",
       "3      202307277679020    L79020         2023-07-27        Darwin   \n",
       "4      202307277674553    L74553         2023-07-27            TD   \n",
       "...                ...       ...                ...           ...   \n",
       "37095  202307278055183    P55183         2023-07-27        Darwin   \n",
       "37096  202307278055183    P55183         2023-07-27        Darwin   \n",
       "37097  202307278055183    P55183         2023-07-27        Darwin   \n",
       "37098  202307278055183    P55183         2023-07-27        Darwin   \n",
       "37099  202307278055183    P55183         2023-07-27        Darwin   \n",
       "\n",
       "      station_name_code working_time_arrival working_time_departure  \\\n",
       "0                  STFD  2023-07-27 00:03:00    2023-07-27 00:03:30   \n",
       "1               SPNY205  2023-07-27 00:07:00    2023-07-27 00:13:30   \n",
       "2                PADTLL  2023-07-27 00:30:30    2023-07-27 00:31:00   \n",
       "3               WBRNPKS  2023-07-27 00:33:00    2023-07-27 00:35:00   \n",
       "4               SVNOAKS  2023-07-27 21:53:00    2023-07-27 21:54:30   \n",
       "...                 ...                  ...                    ...   \n",
       "37095            BRADIN  2023-07-27 17:30:30    2023-07-27 17:33:30   \n",
       "37096              HLFX  2023-07-27 17:44:00    2023-07-27 17:45:00   \n",
       "37097           HBDNBDG  2023-07-27 17:58:30    2023-07-27 18:01:30   \n",
       "37098           TODMRDN  2023-07-27 18:08:30    2023-07-27 18:09:30   \n",
       "37099           RCHDALE  2023-07-27 18:18:30    2023-07-27 18:19:30   \n",
       "\n",
       "      planned_time_arrival planned_time_departure platform  \\\n",
       "0                      NaT                    NaT        5   \n",
       "1                      NaT                    NaT     None   \n",
       "2                      NaT                    NaT        B   \n",
       "3                      NaT                    NaT        A   \n",
       "4      2023-07-27 21:53:00    2023-07-27 21:54:00        1   \n",
       "...                    ...                    ...      ...   \n",
       "37095  2023-07-27 17:31:00    2023-07-27 17:33:00        4   \n",
       "37096  2023-07-27 17:44:00    2023-07-27 17:45:00        1   \n",
       "37097  2023-07-27 17:59:00    2023-07-27 18:01:00        1   \n",
       "37098  2023-07-27 18:09:00    2023-07-27 18:09:00        1   \n",
       "37099  2023-07-27 18:19:00    2023-07-27 18:19:00        3   \n",
       "\n",
       "      actual_arrival_time actual_departure_time  is_delayed_arrival  \\\n",
       "0     2023-07-27 00:53:00   2023-07-27 00:53:00                True   \n",
       "1     2023-07-27 00:57:00   2023-07-27 00:58:00                True   \n",
       "2     2023-07-27 01:07:00   2023-07-27 01:07:00                True   \n",
       "3     2023-07-27 01:09:00   2023-07-27 01:10:00                True   \n",
       "4                     NaT                   NaT               False   \n",
       "...                   ...                   ...                 ...   \n",
       "37095 2023-07-27 18:07:00   2023-07-27 18:08:00                True   \n",
       "37096 2023-07-27 18:18:00   2023-07-27 18:19:00                True   \n",
       "37097 2023-07-27 18:29:00   2023-07-27 18:30:00                True   \n",
       "37098 2023-07-27 18:35:00   2023-07-27 18:35:00                True   \n",
       "37099 2023-07-27 18:44:00   2023-07-27 18:45:00                True   \n",
       "\n",
       "       is_delayed_departure tiploc_code                       station_name  \\\n",
       "0                      True        STFD    Stratford (London) Rail Station   \n",
       "1                      True         NaN                                NaN   \n",
       "2                      True         NaN                                NaN   \n",
       "3                      True         NaN                                NaN   \n",
       "4                     False     SVNOAKS             Sevenoaks Rail Station   \n",
       "...                     ...         ...                                ...   \n",
       "37095                  True      BRADIN  Bradford Interchange Rail Station   \n",
       "37096                  True        HLFX               Halifax Rail Station   \n",
       "37097                  True     HBDNBDG         Hebden Bridge Rail Station   \n",
       "37098                  True     TODMRDN             Todmorden Rail Station   \n",
       "37099                  True     RCHDALE              Rochdale Rail Station   \n",
       "\n",
       "      arrival_delay_amount  delay_amount_numeric   planned_vs_working  \n",
       "0                      NaT                   NaN -9223372036854775808  \n",
       "1                      NaT                   NaN -9223372036854775808  \n",
       "2                      NaT                   NaN -9223372036854775808  \n",
       "3                      NaT                   NaN -9223372036854775808  \n",
       "4                      NaT                   NaN                    0  \n",
       "...                    ...                   ...                  ...  \n",
       "37095      0 days 00:36:00                2160.0          30000000000  \n",
       "37096      0 days 00:34:00                2040.0                    0  \n",
       "37097      0 days 00:30:00                1800.0          30000000000  \n",
       "37098      0 days 00:26:00                1560.0          30000000000  \n",
       "37099      0 days 00:25:00                1500.0          30000000000  \n",
       "\n",
       "[35673 rows x 19 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "routes = df.groupby('route_id')\n",
    "routes.head(30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "433853c8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "is_delayed_arrival\n",
       "False    34706\n",
       "True      2394\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['is_delayed_arrival'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "9243cd09",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "is_delayed_departure\n",
       "False    34489\n",
       "True      2611\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['is_delayed_departure'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33ba9e8d",
   "metadata": {},
   "source": [
    "#### Isolating one specific 'route_id'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "f66fd6a7",
   "metadata": {},
   "outputs": [],
   "source": [
    "route_mask = (df['route_id'] == '202307298953214')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "ad63b237",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>route_id</th>\n",
       "      <th>unique_id</th>\n",
       "      <th>service_start_date</th>\n",
       "      <th>update_origin</th>\n",
       "      <th>station_name_code</th>\n",
       "      <th>working_time_arrival</th>\n",
       "      <th>working_time_departure</th>\n",
       "      <th>planned_time_arrival</th>\n",
       "      <th>planned_time_departure</th>\n",
       "      <th>platform</th>\n",
       "      <th>actual_arrival_time</th>\n",
       "      <th>actual_departure_time</th>\n",
       "      <th>is_delayed_arrival</th>\n",
       "      <th>is_delayed_departure</th>\n",
       "      <th>tiploc_code</th>\n",
       "      <th>station_name</th>\n",
       "      <th>arrival_delay_amount</th>\n",
       "      <th>delay_amount_numeric</th>\n",
       "      <th>planned_vs_working</th>\n",
       "      <th>trip_length</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9217</th>\n",
       "      <td>202307298953214</td>\n",
       "      <td>Y53214</td>\n",
       "      <td>2023-07-29</td>\n",
       "      <td>CIS</td>\n",
       "      <td>CTMSLNK</td>\n",
       "      <td>2023-07-29 00:34:00</td>\n",
       "      <td>2023-07-29 00:35:00</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>1</td>\n",
       "      <td>2023-07-29 00:34:00</td>\n",
       "      <td>2023-07-29 00:35:00</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>CTMSLNK</td>\n",
       "      <td>City Thameslink Rail Station</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-9223372036854775808</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9218</th>\n",
       "      <td>202307298953214</td>\n",
       "      <td>Y53214</td>\n",
       "      <td>2023-07-29</td>\n",
       "      <td>CIS</td>\n",
       "      <td>CRKLWD</td>\n",
       "      <td>2023-07-29 00:53:30</td>\n",
       "      <td>2023-07-29 00:55:00</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2</td>\n",
       "      <td>2023-07-29 00:48:00</td>\n",
       "      <td>2023-07-29 00:49:00</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>CRKLWD</td>\n",
       "      <td>Cricklewood Rail Station</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-9223372036854775808</td>\n",
       "      <td>0 days 00:19:30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             route_id unique_id service_start_date update_origin  \\\n",
       "9217  202307298953214    Y53214         2023-07-29           CIS   \n",
       "9218  202307298953214    Y53214         2023-07-29           CIS   \n",
       "\n",
       "     station_name_code working_time_arrival working_time_departure  \\\n",
       "9217           CTMSLNK  2023-07-29 00:34:00    2023-07-29 00:35:00   \n",
       "9218            CRKLWD  2023-07-29 00:53:30    2023-07-29 00:55:00   \n",
       "\n",
       "     planned_time_arrival planned_time_departure platform actual_arrival_time  \\\n",
       "9217                  NaT                    NaT        1 2023-07-29 00:34:00   \n",
       "9218                  NaT                    NaT        2 2023-07-29 00:48:00   \n",
       "\n",
       "     actual_departure_time  is_delayed_arrival  is_delayed_departure  \\\n",
       "9217   2023-07-29 00:35:00               False                 False   \n",
       "9218   2023-07-29 00:49:00               False                 False   \n",
       "\n",
       "     tiploc_code                  station_name arrival_delay_amount  \\\n",
       "9217     CTMSLNK  City Thameslink Rail Station                  NaT   \n",
       "9218      CRKLWD      Cricklewood Rail Station                  NaT   \n",
       "\n",
       "      delay_amount_numeric   planned_vs_working     trip_length  \n",
       "9217                   NaN -9223372036854775808             NaT  \n",
       "9218                   NaN -9223372036854775808 0 days 00:19:30  "
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[route_mask]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "9dd241c5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>route_id</th>\n",
       "      <th>unique_id</th>\n",
       "      <th>service_start_date</th>\n",
       "      <th>update_origin</th>\n",
       "      <th>station_name_code</th>\n",
       "      <th>working_time_arrival</th>\n",
       "      <th>working_time_departure</th>\n",
       "      <th>planned_time_arrival</th>\n",
       "      <th>planned_time_departure</th>\n",
       "      <th>platform</th>\n",
       "      <th>actual_arrival_time</th>\n",
       "      <th>actual_departure_time</th>\n",
       "      <th>is_delayed_arrival</th>\n",
       "      <th>is_delayed_departure</th>\n",
       "      <th>tiploc_code</th>\n",
       "      <th>station_name</th>\n",
       "      <th>arrival_delay_amount</th>\n",
       "      <th>delay_amount_numeric</th>\n",
       "      <th>planned_vs_working</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>9217</th>\n",
       "      <td>202307298953214</td>\n",
       "      <td>Y53214</td>\n",
       "      <td>2023-07-29</td>\n",
       "      <td>CIS</td>\n",
       "      <td>CTMSLNK</td>\n",
       "      <td>2023-07-29 00:34:00</td>\n",
       "      <td>2023-07-29 00:35:00</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>1</td>\n",
       "      <td>2023-07-29 00:34:00</td>\n",
       "      <td>2023-07-29 00:35:00</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>CTMSLNK</td>\n",
       "      <td>City Thameslink Rail Station</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-9223372036854775808</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9218</th>\n",
       "      <td>202307298953214</td>\n",
       "      <td>Y53214</td>\n",
       "      <td>2023-07-29</td>\n",
       "      <td>CIS</td>\n",
       "      <td>CRKLWD</td>\n",
       "      <td>2023-07-29 00:53:30</td>\n",
       "      <td>2023-07-29 00:55:00</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2</td>\n",
       "      <td>2023-07-29 00:48:00</td>\n",
       "      <td>2023-07-29 00:49:00</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>CRKLWD</td>\n",
       "      <td>Cricklewood Rail Station</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-9223372036854775808</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             route_id unique_id service_start_date update_origin  \\\n",
       "9217  202307298953214    Y53214         2023-07-29           CIS   \n",
       "9218  202307298953214    Y53214         2023-07-29           CIS   \n",
       "\n",
       "     station_name_code working_time_arrival working_time_departure  \\\n",
       "9217           CTMSLNK  2023-07-29 00:34:00    2023-07-29 00:35:00   \n",
       "9218            CRKLWD  2023-07-29 00:53:30    2023-07-29 00:55:00   \n",
       "\n",
       "     planned_time_arrival planned_time_departure platform actual_arrival_time  \\\n",
       "9217                  NaT                    NaT        1 2023-07-29 00:34:00   \n",
       "9218                  NaT                    NaT        2 2023-07-29 00:48:00   \n",
       "\n",
       "     actual_departure_time  is_delayed_arrival  is_delayed_departure  \\\n",
       "9217   2023-07-29 00:35:00               False                 False   \n",
       "9218   2023-07-29 00:49:00               False                 False   \n",
       "\n",
       "     tiploc_code                  station_name arrival_delay_amount  \\\n",
       "9217     CTMSLNK  City Thameslink Rail Station                  NaT   \n",
       "9218      CRKLWD      Cricklewood Rail Station                  NaT   \n",
       "\n",
       "      delay_amount_numeric   planned_vs_working  \n",
       "9217                   NaN -9223372036854775808  \n",
       "9218                   NaN -9223372036854775808  "
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[route_mask].sort_values(by= 'working_time_arrival')\n",
    "df[route_mask]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7e4805be",
   "metadata": {},
   "source": [
    "## As some of the trains with identical ids appear to be running parallel to each other, we can perhaps infer that these are local versus express trains, accounting for a difference in their actual arrival and departure times. However, without more information about the specifics, any attempt to determine the exact length in time of the trip is purely guesswork."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "370f75f4",
   "metadata": {},
   "source": [
    "## Fixing Trip_length"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "d651cdcb",
   "metadata": {},
   "outputs": [],
   "source": [
    "route_df = df.groupby('route_id', as_index = False)\n",
    "#for i in range(len(route_df)-1):\n",
    "  #  i+=1\n",
    "   # if (i+2) <= len(route_df):\n",
    "    #    route_df['trip_length'] = route_df['working_time_arrival'][i] - route_df['working_time_departure'][i]\n",
    "\n",
    "df['trip_length'] = route_df['working_time_arrival'].diff()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "14b2ddd5",
   "metadata": {},
   "source": [
    "##### route_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "c1e038a1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 37100 entries, 0 to 37099\n",
      "Data columns (total 20 columns):\n",
      " #   Column                  Non-Null Count  Dtype          \n",
      "---  ------                  --------------  -----          \n",
      " 0   route_id                37100 non-null  object         \n",
      " 1   unique_id               37100 non-null  object         \n",
      " 2   service_start_date      37100 non-null  object         \n",
      " 3   update_origin           36515 non-null  object         \n",
      " 4   station_name_code       37100 non-null  object         \n",
      " 5   working_time_arrival    37100 non-null  datetime64[ns] \n",
      " 6   working_time_departure  37100 non-null  datetime64[ns] \n",
      " 7   planned_time_arrival    33855 non-null  datetime64[ns] \n",
      " 8   planned_time_departure  33580 non-null  datetime64[ns] \n",
      " 9   platform                34114 non-null  object         \n",
      " 10  actual_arrival_time     31769 non-null  datetime64[ns] \n",
      " 11  actual_departure_time   34384 non-null  datetime64[ns] \n",
      " 12  is_delayed_arrival      37100 non-null  bool           \n",
      " 13  is_delayed_departure    37100 non-null  bool           \n",
      " 14  tiploc_code             34478 non-null  object         \n",
      " 15  station_name            34478 non-null  object         \n",
      " 16  arrival_delay_amount    28885 non-null  timedelta64[ns]\n",
      " 17  delay_amount_numeric    28885 non-null  float64        \n",
      " 18  planned_vs_working      37100 non-null  int64          \n",
      " 19  trip_length             30555 non-null  timedelta64[ns]\n",
      "dtypes: bool(2), datetime64[ns](6), float64(1), int64(1), object(8), timedelta64[ns](2)\n",
      "memory usage: 5.2+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "0e474063",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0                     NaT\n",
       "1         0 days 00:04:00\n",
       "2         0 days 00:23:30\n",
       "3         0 days 00:02:30\n",
       "4                     NaT\n",
       "               ...       \n",
       "37081     0 days 00:00:00\n",
       "37082                 NaT\n",
       "37083                 NaT\n",
       "37087   -1 days +23:55:00\n",
       "37092     0 days 00:07:00\n",
       "Name: trip_length, Length: 19696, dtype: timedelta64[ns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "route_df['trip_length'].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "45462b2c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>route_id</th>\n",
       "      <th>trip_length</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>202307276700069</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>202307276700071</td>\n",
       "      <td>0 days 00:40:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>202307276700078</td>\n",
       "      <td>0 days 00:05:54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>202307276700152</td>\n",
       "      <td>0 days 00:12:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>202307276700158</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6540</th>\n",
       "      <td>202307298952777</td>\n",
       "      <td>0 days 00:08:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6541</th>\n",
       "      <td>202307298952823</td>\n",
       "      <td>0 days 00:11:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6542</th>\n",
       "      <td>202307298952855</td>\n",
       "      <td>0 days 00:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6543</th>\n",
       "      <td>202307298953208</td>\n",
       "      <td>0 days 00:07:52.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6544</th>\n",
       "      <td>202307298953214</td>\n",
       "      <td>0 days 00:19:30</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6545 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             route_id            trip_length\n",
       "0     202307276700069                    NaT\n",
       "1     202307276700071        0 days 00:40:00\n",
       "2     202307276700078        0 days 00:05:54\n",
       "3     202307276700152        0 days 00:12:00\n",
       "4     202307276700158                    NaT\n",
       "...               ...                    ...\n",
       "6540  202307298952777        0 days 00:08:00\n",
       "6541  202307298952823        0 days 00:11:00\n",
       "6542  202307298952855        0 days 00:00:00\n",
       "6543  202307298953208 0 days 00:07:52.500000\n",
       "6544  202307298953214        0 days 00:19:30\n",
       "\n",
       "[6545 rows x 2 columns]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "route_df['trip_length'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "fb92b8ce",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "route_id         202307276700069\n",
      "trip_length    -1 days +00:06:00\n",
      "dtype: object route_id       202307298953214\n",
      "trip_length    0 days 23:55:00\n",
      "dtype: object\n"
     ]
    }
   ],
   "source": [
    "route_length_total = route_df.agg({'trip_length': 'sum'})\n",
    "print(f'{route_length_total.min(axis = 0)} {route_length_total.max(axis = 0)}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "046e647a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>route_id</th>\n",
       "      <th>unique_id</th>\n",
       "      <th>service_start_date</th>\n",
       "      <th>update_origin</th>\n",
       "      <th>station_name_code</th>\n",
       "      <th>working_time_arrival</th>\n",
       "      <th>working_time_departure</th>\n",
       "      <th>planned_time_arrival</th>\n",
       "      <th>planned_time_departure</th>\n",
       "      <th>platform</th>\n",
       "      <th>actual_arrival_time</th>\n",
       "      <th>actual_departure_time</th>\n",
       "      <th>is_delayed_arrival</th>\n",
       "      <th>is_delayed_departure</th>\n",
       "      <th>tiploc_code</th>\n",
       "      <th>station_name</th>\n",
       "      <th>arrival_delay_amount</th>\n",
       "      <th>delay_amount_numeric</th>\n",
       "      <th>planned_vs_working</th>\n",
       "      <th>trip_length</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>STFD</td>\n",
       "      <td>2023-07-27 00:03:00</td>\n",
       "      <td>2023-07-27 00:03:30</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>5</td>\n",
       "      <td>2023-07-27 00:53:00</td>\n",
       "      <td>2023-07-27 00:53:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>STFD</td>\n",
       "      <td>Stratford (London) Rail Station</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-9223372036854775808</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>SPNY205</td>\n",
       "      <td>2023-07-27 00:07:00</td>\n",
       "      <td>2023-07-27 00:13:30</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>None</td>\n",
       "      <td>2023-07-27 00:57:00</td>\n",
       "      <td>2023-07-27 00:58:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-9223372036854775808</td>\n",
       "      <td>0 days 00:04:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>PADTLL</td>\n",
       "      <td>2023-07-27 00:30:30</td>\n",
       "      <td>2023-07-27 00:31:00</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>B</td>\n",
       "      <td>2023-07-27 01:07:00</td>\n",
       "      <td>2023-07-27 01:07:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-9223372036854775808</td>\n",
       "      <td>0 days 00:23:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>WBRNPKS</td>\n",
       "      <td>2023-07-27 00:33:00</td>\n",
       "      <td>2023-07-27 00:35:00</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>A</td>\n",
       "      <td>2023-07-27 01:09:00</td>\n",
       "      <td>2023-07-27 01:10:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-9223372036854775808</td>\n",
       "      <td>0 days 00:02:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>202307277674553</td>\n",
       "      <td>L74553</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>SVNOAKS</td>\n",
       "      <td>2023-07-27 21:53:00</td>\n",
       "      <td>2023-07-27 21:54:30</td>\n",
       "      <td>2023-07-27 21:53:00</td>\n",
       "      <td>2023-07-27 21:54:00</td>\n",
       "      <td>1</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>SVNOAKS</td>\n",
       "      <td>Sevenoaks Rail Station</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37081</th>\n",
       "      <td>202307288077507</td>\n",
       "      <td>P77507</td>\n",
       "      <td>2023-07-28</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>WORCWLJ</td>\n",
       "      <td>2023-07-28 06:59:00</td>\n",
       "      <td>2023-07-28 07:12:00</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>DM</td>\n",
       "      <td>2023-07-28 06:59:00</td>\n",
       "      <td>2023-07-28 07:00:00</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-9223372036854775808</td>\n",
       "      <td>0 days 00:00:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37082</th>\n",
       "      <td>202307277167158</td>\n",
       "      <td>G67158</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>MRSN</td>\n",
       "      <td>2023-07-27 18:30:00</td>\n",
       "      <td>2023-07-27 18:31:00</td>\n",
       "      <td>2023-07-27 18:30:00</td>\n",
       "      <td>2023-07-27 18:31:00</td>\n",
       "      <td>1</td>\n",
       "      <td>2023-07-27 18:30:00</td>\n",
       "      <td>2023-07-27 18:31:00</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>MRSN</td>\n",
       "      <td>Marsden Rail Station</td>\n",
       "      <td>0 days</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37083</th>\n",
       "      <td>202307278076891</td>\n",
       "      <td>P76891</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>GLOSTER</td>\n",
       "      <td>2023-07-27 20:32:00</td>\n",
       "      <td>2023-07-27 20:41:00</td>\n",
       "      <td>2023-07-27 20:32:00</td>\n",
       "      <td>2023-07-27 20:41:00</td>\n",
       "      <td>1</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 20:41:00</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>GLOSTER</td>\n",
       "      <td>Gloucester Rail Station</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37087</th>\n",
       "      <td>202307277635513</td>\n",
       "      <td>L35513</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>BNWK</td>\n",
       "      <td>2023-07-27 22:47:30</td>\n",
       "      <td>2023-07-27 22:48:00</td>\n",
       "      <td>2023-07-27 22:48:00</td>\n",
       "      <td>2023-07-27 22:48:00</td>\n",
       "      <td>2</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 22:48:00</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>BNWK</td>\n",
       "      <td>Brunswick Rail Station</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>30000000000</td>\n",
       "      <td>-1 days +23:55:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37092</th>\n",
       "      <td>202307278023381</td>\n",
       "      <td>P23381</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>WHHRTLA</td>\n",
       "      <td>2023-07-27 20:17:00</td>\n",
       "      <td>2023-07-27 20:17:30</td>\n",
       "      <td>2023-07-27 20:17:00</td>\n",
       "      <td>2023-07-27 20:17:00</td>\n",
       "      <td>1</td>\n",
       "      <td>NaT</td>\n",
       "      <td>2023-07-27 20:18:00</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>WHHRTLA</td>\n",
       "      <td>White Hart Lane Rail Station</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>0 days 00:07:00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>19696 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              route_id unique_id service_start_date update_origin  \\\n",
       "0      202307277679020    L79020         2023-07-27        Darwin   \n",
       "1      202307277679020    L79020         2023-07-27        Darwin   \n",
       "2      202307277679020    L79020         2023-07-27        Darwin   \n",
       "3      202307277679020    L79020         2023-07-27        Darwin   \n",
       "4      202307277674553    L74553         2023-07-27            TD   \n",
       "...                ...       ...                ...           ...   \n",
       "37081  202307288077507    P77507         2023-07-28        Darwin   \n",
       "37082  202307277167158    G67158         2023-07-27            TD   \n",
       "37083  202307278076891    P76891         2023-07-27            TD   \n",
       "37087  202307277635513    L35513         2023-07-27            TD   \n",
       "37092  202307278023381    P23381         2023-07-27            TD   \n",
       "\n",
       "      station_name_code working_time_arrival working_time_departure  \\\n",
       "0                  STFD  2023-07-27 00:03:00    2023-07-27 00:03:30   \n",
       "1               SPNY205  2023-07-27 00:07:00    2023-07-27 00:13:30   \n",
       "2                PADTLL  2023-07-27 00:30:30    2023-07-27 00:31:00   \n",
       "3               WBRNPKS  2023-07-27 00:33:00    2023-07-27 00:35:00   \n",
       "4               SVNOAKS  2023-07-27 21:53:00    2023-07-27 21:54:30   \n",
       "...                 ...                  ...                    ...   \n",
       "37081           WORCWLJ  2023-07-28 06:59:00    2023-07-28 07:12:00   \n",
       "37082              MRSN  2023-07-27 18:30:00    2023-07-27 18:31:00   \n",
       "37083           GLOSTER  2023-07-27 20:32:00    2023-07-27 20:41:00   \n",
       "37087              BNWK  2023-07-27 22:47:30    2023-07-27 22:48:00   \n",
       "37092           WHHRTLA  2023-07-27 20:17:00    2023-07-27 20:17:30   \n",
       "\n",
       "      planned_time_arrival planned_time_departure platform  \\\n",
       "0                      NaT                    NaT        5   \n",
       "1                      NaT                    NaT     None   \n",
       "2                      NaT                    NaT        B   \n",
       "3                      NaT                    NaT        A   \n",
       "4      2023-07-27 21:53:00    2023-07-27 21:54:00        1   \n",
       "...                    ...                    ...      ...   \n",
       "37081                  NaT                    NaT       DM   \n",
       "37082  2023-07-27 18:30:00    2023-07-27 18:31:00        1   \n",
       "37083  2023-07-27 20:32:00    2023-07-27 20:41:00        1   \n",
       "37087  2023-07-27 22:48:00    2023-07-27 22:48:00        2   \n",
       "37092  2023-07-27 20:17:00    2023-07-27 20:17:00        1   \n",
       "\n",
       "      actual_arrival_time actual_departure_time  is_delayed_arrival  \\\n",
       "0     2023-07-27 00:53:00   2023-07-27 00:53:00                True   \n",
       "1     2023-07-27 00:57:00   2023-07-27 00:58:00                True   \n",
       "2     2023-07-27 01:07:00   2023-07-27 01:07:00                True   \n",
       "3     2023-07-27 01:09:00   2023-07-27 01:10:00                True   \n",
       "4                     NaT                   NaT               False   \n",
       "...                   ...                   ...                 ...   \n",
       "37081 2023-07-28 06:59:00   2023-07-28 07:00:00               False   \n",
       "37082 2023-07-27 18:30:00   2023-07-27 18:31:00               False   \n",
       "37083                 NaT   2023-07-27 20:41:00               False   \n",
       "37087                 NaT   2023-07-27 22:48:00               False   \n",
       "37092                 NaT   2023-07-27 20:18:00               False   \n",
       "\n",
       "       is_delayed_departure tiploc_code                     station_name  \\\n",
       "0                      True        STFD  Stratford (London) Rail Station   \n",
       "1                      True         NaN                              NaN   \n",
       "2                      True         NaN                              NaN   \n",
       "3                      True         NaN                              NaN   \n",
       "4                     False     SVNOAKS           Sevenoaks Rail Station   \n",
       "...                     ...         ...                              ...   \n",
       "37081                 False         NaN                              NaN   \n",
       "37082                 False        MRSN             Marsden Rail Station   \n",
       "37083                 False     GLOSTER          Gloucester Rail Station   \n",
       "37087                 False        BNWK           Brunswick Rail Station   \n",
       "37092                 False     WHHRTLA     White Hart Lane Rail Station   \n",
       "\n",
       "      arrival_delay_amount  delay_amount_numeric   planned_vs_working  \\\n",
       "0                      NaT                   NaN -9223372036854775808   \n",
       "1                      NaT                   NaN -9223372036854775808   \n",
       "2                      NaT                   NaN -9223372036854775808   \n",
       "3                      NaT                   NaN -9223372036854775808   \n",
       "4                      NaT                   NaN                    0   \n",
       "...                    ...                   ...                  ...   \n",
       "37081                  NaT                   NaN -9223372036854775808   \n",
       "37082               0 days                   0.0                    0   \n",
       "37083                  NaT                   NaN                    0   \n",
       "37087                  NaT                   NaN          30000000000   \n",
       "37092                  NaT                   NaN                    0   \n",
       "\n",
       "            trip_length  \n",
       "0                   NaT  \n",
       "1       0 days 00:04:00  \n",
       "2       0 days 00:23:30  \n",
       "3       0 days 00:02:30  \n",
       "4                   NaT  \n",
       "...                 ...  \n",
       "37081   0 days 00:00:00  \n",
       "37082               NaT  \n",
       "37083               NaT  \n",
       "37087 -1 days +23:55:00  \n",
       "37092   0 days 00:07:00  \n",
       "\n",
       "[19696 rows x 20 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "route_df.head()"
   ]
  },
  {
   "cell_type": "raw",
   "id": "a87d8351",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "69ec2f91",
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'DataFrameGroupBy' object has no attribute 'sort_values'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[33], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m route_df\u001b[38;5;241m.\u001b[39msort_values(by\u001b[38;5;241m=\u001b[39mroute_length_total)\u001b[38;5;241m.\u001b[39mhead()\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\groupby\\groupby.py:952\u001b[0m, in \u001b[0;36mGroupBy.__getattr__\u001b[1;34m(self, attr)\u001b[0m\n\u001b[0;32m    949\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m attr \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mobj:\n\u001b[0;32m    950\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m[attr]\n\u001b[1;32m--> 952\u001b[0m \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mAttributeError\u001b[39;00m(\n\u001b[0;32m    953\u001b[0m     \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mtype\u001b[39m(\u001b[38;5;28mself\u001b[39m)\u001b[38;5;241m.\u001b[39m\u001b[38;5;18m__name__\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m object has no attribute \u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mattr\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    954\u001b[0m )\n",
      "\u001b[1;31mAttributeError\u001b[0m: 'DataFrameGroupBy' object has no attribute 'sort_values'"
     ]
    }
   ],
   "source": [
    "route_df.sort_values(by=route_length_total).head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "29f234b4",
   "metadata": {},
   "source": [
    "## What are the most used platforms/stations?\n",
    "#### All of the most used platforms appear to be in Greater London."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "702b6bcb",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['station_name'].value_counts().head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c12896fd",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.figure(figsize = (10,6))\n",
    "plt.scatter(x = df['working_time_arrival'], y = df['actual_arrival_time'], alpha=0.5, s=10)\n",
    "plt.xlabel(\"Working arrival time (MM-DD-HH)\")\n",
    "plt.ylabel(\"Actual arrival time (MM-DD-HH)\")\n",
    "plt.title('Scatterplot of Working Arrival Time vs Actual Arrival Time')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7834a0c7",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.figure(figsize = (10,6))\n",
    "plt.scatter(x = df['planned_time_arrival'], y = df['actual_arrival_time'],alpha=0.5, s=10)\n",
    "plt.xlabel(\"Planned arrival time (MM-DD-HH)\")\n",
    "plt.ylabel(\"Actual arrival time (MM-DD-HH)\")\n",
    "plt.title('Scatterplot of Planned Arrival Time vs Actual Arrival Time')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b5b393e",
   "metadata": {},
   "source": [
    "### What is the difference between planned and working times? How often do they differ?\n",
    "Based on graph below, these two very rarely differ. This indicates that Network Rail is doing a good job of scheduling out arrival and departures of their trains.\n",
    "Working is the internally scheduled arrival and departure times, while planned is the public facing scheduled time."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e870989f",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.figure(figsize = (10,6))\n",
    "plt.scatter(x = df['working_time_arrival'], y = df['planned_time_arrival'],alpha=0.5,s=10)\n",
    "plt.xlabel(\"Working arrival time (MM-DD-HH)\")\n",
    "plt.ylabel(\"Planned arrival time (MM-DD-HH)\")\n",
    "plt.title('Scatterplot of Working Arrival Time vs Planned Arrival Time')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "817d7e09",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>route_id</th>\n",
       "      <th>unique_id</th>\n",
       "      <th>service_start_date</th>\n",
       "      <th>update_origin</th>\n",
       "      <th>station_name_code</th>\n",
       "      <th>working_time_arrival</th>\n",
       "      <th>working_time_departure</th>\n",
       "      <th>planned_time_arrival</th>\n",
       "      <th>planned_time_departure</th>\n",
       "      <th>platform</th>\n",
       "      <th>actual_arrival_time</th>\n",
       "      <th>actual_departure_time</th>\n",
       "      <th>is_delayed_arrival</th>\n",
       "      <th>is_delayed_departure</th>\n",
       "      <th>tiploc_code</th>\n",
       "      <th>station_name</th>\n",
       "      <th>arrival_delay_amount</th>\n",
       "      <th>delay_amount_numeric</th>\n",
       "      <th>planned_vs_working</th>\n",
       "      <th>trip_length</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>202307277679020</td>\n",
       "      <td>L79020</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>STFD</td>\n",
       "      <td>2023-07-27 00:03:00</td>\n",
       "      <td>2023-07-27 00:03:30</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>5</td>\n",
       "      <td>2023-07-27 00:53:00</td>\n",
       "      <td>2023-07-27 00:53:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>STFD</td>\n",
       "      <td>Stratford (London) Rail Station</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-9223372036854775808</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>202307277674553</td>\n",
       "      <td>L74553</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>SVNOAKS</td>\n",
       "      <td>2023-07-27 21:53:00</td>\n",
       "      <td>2023-07-27 21:54:30</td>\n",
       "      <td>2023-07-27 21:53:00</td>\n",
       "      <td>2023-07-27 21:54:00</td>\n",
       "      <td>1</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaT</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>SVNOAKS</td>\n",
       "      <td>Sevenoaks Rail Station</td>\n",
       "      <td>NaT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>202307277679633</td>\n",
       "      <td>L79633</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>STFD</td>\n",
       "      <td>2023-07-27 19:42:30</td>\n",
       "      <td>2023-07-27 19:43:30</td>\n",
       "      <td>2023-07-27 19:43:00</td>\n",
       "      <td>2023-07-27 19:43:00</td>\n",
       "      <td>8</td>\n",
       "      <td>2023-07-27 19:43:00</td>\n",
       "      <td>2023-07-27 19:44:00</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>STFD</td>\n",
       "      <td>Stratford (London) Rail Station</td>\n",
       "      <td>0 days 00:00:00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>30000000000</td>\n",
       "      <td>NaT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>202307277679633</td>\n",
       "      <td>L79633</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>MRYLAND</td>\n",
       "      <td>2023-07-27 19:45:00</td>\n",
       "      <td>2023-07-27 19:45:30</td>\n",
       "      <td>2023-07-27 19:45:00</td>\n",
       "      <td>2023-07-27 19:45:00</td>\n",
       "      <td>2</td>\n",
       "      <td>2023-07-27 19:45:00</td>\n",
       "      <td>2023-07-27 19:46:00</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>MRYLAND</td>\n",
       "      <td>Maryland Rail Station</td>\n",
       "      <td>0 days 00:00:00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0 days 00:02:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>202307277679633</td>\n",
       "      <td>L79633</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>TD</td>\n",
       "      <td>FRSTGT</td>\n",
       "      <td>2023-07-27 19:47:00</td>\n",
       "      <td>2023-07-27 19:47:30</td>\n",
       "      <td>2023-07-27 19:47:00</td>\n",
       "      <td>2023-07-27 19:47:00</td>\n",
       "      <td>2</td>\n",
       "      <td>2023-07-27 19:47:00</td>\n",
       "      <td>2023-07-27 19:48:00</td>\n",
       "      <td>False</td>\n",
       "      <td>False</td>\n",
       "      <td>FRSTGT</td>\n",
       "      <td>Forest Gate Rail Station</td>\n",
       "      <td>0 days 00:00:00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0 days 00:02:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37095</th>\n",
       "      <td>202307278055183</td>\n",
       "      <td>P55183</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>BRADIN</td>\n",
       "      <td>2023-07-27 17:30:30</td>\n",
       "      <td>2023-07-27 17:33:30</td>\n",
       "      <td>2023-07-27 17:31:00</td>\n",
       "      <td>2023-07-27 17:33:00</td>\n",
       "      <td>4</td>\n",
       "      <td>2023-07-27 18:07:00</td>\n",
       "      <td>2023-07-27 18:08:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>BRADIN</td>\n",
       "      <td>Bradford Interchange Rail Station</td>\n",
       "      <td>0 days 00:36:00</td>\n",
       "      <td>2160.0</td>\n",
       "      <td>30000000000</td>\n",
       "      <td>0 days 00:08:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37096</th>\n",
       "      <td>202307278055183</td>\n",
       "      <td>P55183</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>HLFX</td>\n",
       "      <td>2023-07-27 17:44:00</td>\n",
       "      <td>2023-07-27 17:45:00</td>\n",
       "      <td>2023-07-27 17:44:00</td>\n",
       "      <td>2023-07-27 17:45:00</td>\n",
       "      <td>1</td>\n",
       "      <td>2023-07-27 18:18:00</td>\n",
       "      <td>2023-07-27 18:19:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>HLFX</td>\n",
       "      <td>Halifax Rail Station</td>\n",
       "      <td>0 days 00:34:00</td>\n",
       "      <td>2040.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0 days 00:13:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37097</th>\n",
       "      <td>202307278055183</td>\n",
       "      <td>P55183</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>HBDNBDG</td>\n",
       "      <td>2023-07-27 17:58:30</td>\n",
       "      <td>2023-07-27 18:01:30</td>\n",
       "      <td>2023-07-27 17:59:00</td>\n",
       "      <td>2023-07-27 18:01:00</td>\n",
       "      <td>1</td>\n",
       "      <td>2023-07-27 18:29:00</td>\n",
       "      <td>2023-07-27 18:30:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>HBDNBDG</td>\n",
       "      <td>Hebden Bridge Rail Station</td>\n",
       "      <td>0 days 00:30:00</td>\n",
       "      <td>1800.0</td>\n",
       "      <td>30000000000</td>\n",
       "      <td>0 days 00:14:30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37098</th>\n",
       "      <td>202307278055183</td>\n",
       "      <td>P55183</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>TODMRDN</td>\n",
       "      <td>2023-07-27 18:08:30</td>\n",
       "      <td>2023-07-27 18:09:30</td>\n",
       "      <td>2023-07-27 18:09:00</td>\n",
       "      <td>2023-07-27 18:09:00</td>\n",
       "      <td>1</td>\n",
       "      <td>2023-07-27 18:35:00</td>\n",
       "      <td>2023-07-27 18:35:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>TODMRDN</td>\n",
       "      <td>Todmorden Rail Station</td>\n",
       "      <td>0 days 00:26:00</td>\n",
       "      <td>1560.0</td>\n",
       "      <td>30000000000</td>\n",
       "      <td>0 days 00:10:00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37099</th>\n",
       "      <td>202307278055183</td>\n",
       "      <td>P55183</td>\n",
       "      <td>2023-07-27</td>\n",
       "      <td>Darwin</td>\n",
       "      <td>RCHDALE</td>\n",
       "      <td>2023-07-27 18:18:30</td>\n",
       "      <td>2023-07-27 18:19:30</td>\n",
       "      <td>2023-07-27 18:19:00</td>\n",
       "      <td>2023-07-27 18:19:00</td>\n",
       "      <td>3</td>\n",
       "      <td>2023-07-27 18:44:00</td>\n",
       "      <td>2023-07-27 18:45:00</td>\n",
       "      <td>True</td>\n",
       "      <td>True</td>\n",
       "      <td>RCHDALE</td>\n",
       "      <td>Rochdale Rail Station</td>\n",
       "      <td>0 days 00:25:00</td>\n",
       "      <td>1500.0</td>\n",
       "      <td>30000000000</td>\n",
       "      <td>0 days 00:10:00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>27705 rows × 20 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              route_id unique_id service_start_date update_origin  \\\n",
       "0      202307277679020    L79020         2023-07-27        Darwin   \n",
       "4      202307277674553    L74553         2023-07-27            TD   \n",
       "5      202307277679633    L79633         2023-07-27            TD   \n",
       "6      202307277679633    L79633         2023-07-27            TD   \n",
       "7      202307277679633    L79633         2023-07-27            TD   \n",
       "...                ...       ...                ...           ...   \n",
       "37095  202307278055183    P55183         2023-07-27        Darwin   \n",
       "37096  202307278055183    P55183         2023-07-27        Darwin   \n",
       "37097  202307278055183    P55183         2023-07-27        Darwin   \n",
       "37098  202307278055183    P55183         2023-07-27        Darwin   \n",
       "37099  202307278055183    P55183         2023-07-27        Darwin   \n",
       "\n",
       "      station_name_code working_time_arrival working_time_departure  \\\n",
       "0                  STFD  2023-07-27 00:03:00    2023-07-27 00:03:30   \n",
       "4               SVNOAKS  2023-07-27 21:53:00    2023-07-27 21:54:30   \n",
       "5                  STFD  2023-07-27 19:42:30    2023-07-27 19:43:30   \n",
       "6               MRYLAND  2023-07-27 19:45:00    2023-07-27 19:45:30   \n",
       "7                FRSTGT  2023-07-27 19:47:00    2023-07-27 19:47:30   \n",
       "...                 ...                  ...                    ...   \n",
       "37095            BRADIN  2023-07-27 17:30:30    2023-07-27 17:33:30   \n",
       "37096              HLFX  2023-07-27 17:44:00    2023-07-27 17:45:00   \n",
       "37097           HBDNBDG  2023-07-27 17:58:30    2023-07-27 18:01:30   \n",
       "37098           TODMRDN  2023-07-27 18:08:30    2023-07-27 18:09:30   \n",
       "37099           RCHDALE  2023-07-27 18:18:30    2023-07-27 18:19:30   \n",
       "\n",
       "      planned_time_arrival planned_time_departure platform  \\\n",
       "0                      NaT                    NaT        5   \n",
       "4      2023-07-27 21:53:00    2023-07-27 21:54:00        1   \n",
       "5      2023-07-27 19:43:00    2023-07-27 19:43:00        8   \n",
       "6      2023-07-27 19:45:00    2023-07-27 19:45:00        2   \n",
       "7      2023-07-27 19:47:00    2023-07-27 19:47:00        2   \n",
       "...                    ...                    ...      ...   \n",
       "37095  2023-07-27 17:31:00    2023-07-27 17:33:00        4   \n",
       "37096  2023-07-27 17:44:00    2023-07-27 17:45:00        1   \n",
       "37097  2023-07-27 17:59:00    2023-07-27 18:01:00        1   \n",
       "37098  2023-07-27 18:09:00    2023-07-27 18:09:00        1   \n",
       "37099  2023-07-27 18:19:00    2023-07-27 18:19:00        3   \n",
       "\n",
       "      actual_arrival_time actual_departure_time  is_delayed_arrival  \\\n",
       "0     2023-07-27 00:53:00   2023-07-27 00:53:00                True   \n",
       "4                     NaT                   NaT               False   \n",
       "5     2023-07-27 19:43:00   2023-07-27 19:44:00               False   \n",
       "6     2023-07-27 19:45:00   2023-07-27 19:46:00               False   \n",
       "7     2023-07-27 19:47:00   2023-07-27 19:48:00               False   \n",
       "...                   ...                   ...                 ...   \n",
       "37095 2023-07-27 18:07:00   2023-07-27 18:08:00                True   \n",
       "37096 2023-07-27 18:18:00   2023-07-27 18:19:00                True   \n",
       "37097 2023-07-27 18:29:00   2023-07-27 18:30:00                True   \n",
       "37098 2023-07-27 18:35:00   2023-07-27 18:35:00                True   \n",
       "37099 2023-07-27 18:44:00   2023-07-27 18:45:00                True   \n",
       "\n",
       "       is_delayed_departure tiploc_code                       station_name  \\\n",
       "0                      True        STFD    Stratford (London) Rail Station   \n",
       "4                     False     SVNOAKS             Sevenoaks Rail Station   \n",
       "5                     False        STFD    Stratford (London) Rail Station   \n",
       "6                     False     MRYLAND              Maryland Rail Station   \n",
       "7                     False      FRSTGT           Forest Gate Rail Station   \n",
       "...                     ...         ...                                ...   \n",
       "37095                  True      BRADIN  Bradford Interchange Rail Station   \n",
       "37096                  True        HLFX               Halifax Rail Station   \n",
       "37097                  True     HBDNBDG         Hebden Bridge Rail Station   \n",
       "37098                  True     TODMRDN             Todmorden Rail Station   \n",
       "37099                  True     RCHDALE              Rochdale Rail Station   \n",
       "\n",
       "      arrival_delay_amount  delay_amount_numeric   planned_vs_working  \\\n",
       "0                      NaT                   NaN -9223372036854775808   \n",
       "4                      NaT                   NaN                    0   \n",
       "5          0 days 00:00:00                   0.0          30000000000   \n",
       "6          0 days 00:00:00                   0.0                    0   \n",
       "7          0 days 00:00:00                   0.0                    0   \n",
       "...                    ...                   ...                  ...   \n",
       "37095      0 days 00:36:00                2160.0          30000000000   \n",
       "37096      0 days 00:34:00                2040.0                    0   \n",
       "37097      0 days 00:30:00                1800.0          30000000000   \n",
       "37098      0 days 00:26:00                1560.0          30000000000   \n",
       "37099      0 days 00:25:00                1500.0          30000000000   \n",
       "\n",
       "          trip_length  \n",
       "0                 NaT  \n",
       "4                 NaT  \n",
       "5                 NaT  \n",
       "6     0 days 00:02:30  \n",
       "7     0 days 00:02:00  \n",
       "...               ...  \n",
       "37095 0 days 00:08:30  \n",
       "37096 0 days 00:13:30  \n",
       "37097 0 days 00:14:30  \n",
       "37098 0 days 00:10:00  \n",
       "37099 0 days 00:10:00  \n",
       "\n",
       "[27705 rows x 20 columns]"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stations = df.groupby('station_name')\n",
    "stations.head(30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4d36625a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# finding number of unique station names\n",
    "df.nunique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "619a3a67",
   "metadata": {},
   "source": [
    "### Initial exploration of average delay time of 10 highest volume stations. Plan to create a bar graph to visualize."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "463dadcc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "station_name\n",
       "Abbey Wood (London) Rail Station   0 days 00:00:27.272727272\n",
       "Aber Rail Station                            0 days 00:03:30\n",
       "Abercynon Rail Station                       0 days 00:01:24\n",
       "Aberdeen Rail Station                        0 days 00:05:00\n",
       "Aberdour Rail Station              0 days 00:00:42.857142857\n",
       "Aberdovey Rail Station                       0 days 00:00:00\n",
       "Abererch Rail Station                      -1 days +20:02:10\n",
       "Abergavenny Rail Station           0 days 00:04:41.052631578\n",
       "Abergele & Pensarn Rail Station              0 days 00:14:00\n",
       "Accrington Rail Station            0 days 00:04:17.142857142\n",
       "Name: arrival_delay_amount, dtype: timedelta64[ns]"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "delay_amt = stations['arrival_delay_amount'].mean().iloc[:10]\n",
    "delay_amt\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "71833dae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "station_name\n",
       "London Bridge Rail Station           317\n",
       "Clapham Junction Rail Station        261\n",
       "London Waterloo East Rail Station    166\n",
       "Cricklewood Rail Station             147\n",
       "East Croydon Rail Station            147\n",
       "Stockport Rail Station               147\n",
       "Vauxhall Rail Station                132\n",
       "Reading Rail Station                 123\n",
       "Gatwick Airport Rail Station         118\n",
       "London Blackfriars Rail Station      117\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "top_10 = (stations['station_name'].value_counts()).sort_values(ascending=False).iloc[:10]\n",
    "top_10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1f9bffa8",
   "metadata": {},
   "outputs": [],
   "source": [
    "plt.figure(figsize = (12, 8))\n",
    "plt.bar(x = top_10, y = delay_amt)\n",
    "plt.xlabel('Station Name')\n",
    "plt.ylabel('Planned vs Actual Arrival in ns')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b949c9d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "g = df.groupby('station_name', as_index=False)['delay_amount_numeric'].mean().sort_values(by='delay_amount_numeric', ascending=False).head(10)\n",
    "\n",
    "sns.barplot(data=g, x='station_name', y='delay_amount_numeric', hue='station_name', dodge=False).set(xticklabels=[]);\n",
    "plt.ylabel('Delay Amount in seconds');\n",
    "plt.xlabel('Station Name');\n",
    "plt.legend(bbox_to_anchor=(1.05, 1), loc='upper left', borderaxespad=0);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "30db5133",
   "metadata": {},
   "source": [
    "### Are trains leaving late from certain stations?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "1e1fc95b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-68.77410420633547"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['delay_amount_numeric'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "05ac6f6d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "station_name\n",
       "Abbey Wood (London) Rail Station     27.272727\n",
       "Aber Rail Station                   210.000000\n",
       "Abercynon Rail Station               84.000000\n",
       "Aberdeen Rail Station               300.000000\n",
       "Aberdour Rail Station                42.857143\n",
       "                                       ...    \n",
       "Yoker Rail Station                    3.157895\n",
       "York Rail Station                    24.000000\n",
       "Yorton Rail Station                 235.714286\n",
       "Ystrad Mynach Rail Station          120.000000\n",
       "Ystrad Rhondda Rail Station           0.000000\n",
       "Name: delay_amount_numeric, Length: 2242, dtype: float64"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "stations['delay_amount_numeric'].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0ed77f2c",
   "metadata": {},
   "source": [
    "### Reading in data from AWS postgres"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c67a3c8f",
   "metadata": {},
   "outputs": [],
   "source": [
    "engine = create_engine('postgresql+psycopg2://root:hYVn9ATCVijm3rEUdaUS@database-1.caeeymvdsacg.us-east-2.rds.amazonaws.com:5432/postgres')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1cb697e4",
   "metadata": {},
   "outputs": [],
   "source": [
    "stmt = 'select * from darwin'\n",
    "sql_df = pd.read_sql(stmt, engine)\n",
    "sql_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d6a8c310",
   "metadata": {},
   "outputs": [],
   "source": [
    "sql_df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fc8edae0",
   "metadata": {},
   "outputs": [],
   "source": [
    "sql_df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "049969f3",
   "metadata": {},
   "outputs": [],
   "source": [
    "sql_df = pd.merge(left=sql_df, right=rail_ref, \n",
    "                        left_on='train_platform', \n",
    "                        right_on=['TiplocCode'],\n",
    "                        how='left')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f5c7d886",
   "metadata": {},
   "outputs": [],
   "source": [
    "sql_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7d96fa50",
   "metadata": {},
   "source": [
    "#### Finding the most frequent stations. Appears to also be Greater London area, as in sample data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5847e2b3",
   "metadata": {},
   "outputs": [],
   "source": [
    "sql_df['StationName'].value_counts().head(20)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
